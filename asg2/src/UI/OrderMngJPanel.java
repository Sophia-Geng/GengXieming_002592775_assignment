/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.CustomerDirectory;
import Model.Order;
import Model.OrderDirectory;
import Model.ProductDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class OrderMngJPanel extends javax.swing.JPanel {

    /**
     * Creates new form OrderMngJPanel
     */
    private JPanel MainMenu;
    private OrderDirectory orderdirectory; 
    private CustomerDirectory customerdirectory;
    private ProductDirectory productdirectory;
    public OrderMngJPanel(JPanel mainmenu, OrderDirectory directoryo,CustomerDirectory directoryc, ProductDirectory directoryp) {
        initComponents();
        MainMenu=mainmenu;
        orderdirectory=directoryo;
        customerdirectory = directoryc;
        productdirectory = directoryp;
        populateTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SearchOrder = new javax.swing.JButton();
        fieldSearch = new javax.swing.JTextField();
        ViewProduct = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrder = new javax.swing.JTable();
        AddProduct = new javax.swing.JButton();
        DeleteProduct = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 102));

        SearchOrder.setText("Search");
        SearchOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchOrderActionPerformed(evt);
            }
        });

        ViewProduct.setText("View");
        ViewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewProductActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 24)); // NOI18N
        jLabel1.setText("Order");

        tblOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Customer ID", "Date", "Type", "Payment Method", "Status", "Product"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrder);

        AddProduct.setText("Add ");
        AddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddProductActionPerformed(evt);
            }
        });

        DeleteProduct.setText("Delete");
        DeleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteProductActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(DeleteProduct, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(AddProduct, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(160, 160, 160)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SearchOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ViewProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(318, 318, 318)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(310, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddProduct)
                    .addComponent(ViewProduct))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteProduct)
                    .addComponent(SearchOrder)
                    .addComponent(fieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SearchOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchOrderActionPerformed
           if(!fieldSearch.getText().isBlank()){
            String accountNumber=fieldSearch.getText();
            Order found =orderdirectory.searchOrder(accountNumber);
            
            if(found !=null){
                
                ViewOrder panel =new ViewOrder(MainMenu, orderdirectory, found);
                MainMenu.add("ViewOrder",panel);
                CardLayout layout =(CardLayout)MainMenu.getLayout();
                layout.next(MainMenu);    
            }
            else{
                JOptionPane.showMessageDialog(null,"Order not found. Please check the account number and try again");
                
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Please type the Order id");
        }
    }//GEN-LAST:event_SearchOrderActionPerformed

    private void ViewProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewProductActionPerformed
       int selectedRow=tblOrder.getSelectedRow();
        if(selectedRow>=0){
            
            // 获取选中行的Product ID（第1列）
             String productId = (String)tblOrder.getValueAt(selectedRow, 0);
            // 通过ID查找Product对象
             Order selectedProduct = orderdirectory.searchOrder(productId);
           if(selectedProduct != null){
            ViewOrder panel = new  ViewOrder(MainMenu, orderdirectory, selectedProduct);
            MainMenu.add("ViewOrder", panel);
            CardLayout layout = (CardLayout) MainMenu.getLayout();
            layout.next(MainMenu);
        } else {
            JOptionPane.showMessageDialog(this, "Order not found!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a Order from the list", "Warning", JOptionPane.WARNING_MESSAGE);
    }
        


// TODO add your handling code here:
    }//GEN-LAST:event_ViewProductActionPerformed

    private void AddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddProductActionPerformed
        AddOrder panel=new AddOrder(MainMenu,orderdirectory,customerdirectory,productdirectory);
        MainMenu.add("AddOrder",panel);
        
        CardLayout layout=(CardLayout)MainMenu.getLayout();
        layout.next(MainMenu);


// TODO add your handling code here:
    }//GEN-LAST:event_AddProductActionPerformed

    private void DeleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteProductActionPerformed
        // TODO add your handling code here:
      
    int selectedRow = tblOrder.getSelectedRow();
    if(selectedRow >= 0){
        int dialogResult = JOptionPane.showConfirmDialog(this, "Are you sure to delete the order?", 
                                                        "Confirm Delete", JOptionPane.YES_NO_OPTION);
        if(dialogResult == JOptionPane.YES_OPTION){
            String orderId = (String)tblOrder.getValueAt(selectedRow, 0);
            Order selectedOrder = orderdirectory.searchOrder(orderId);
            
            if(selectedOrder != null){
                orderdirectory.deleteOrder(selectedOrder);
                populateTable();
                JOptionPane.showMessageDialog(this, "Order deleted successfully!");
            } else {
                JOptionPane.showMessageDialog(this, "Order not found!");
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select an order to delete!");
    }

            
    }//GEN-LAST:event_DeleteProductActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddProduct;
    private javax.swing.JButton DeleteProduct;
    private javax.swing.JButton SearchOrder;
    private javax.swing.JButton ViewProduct;
    private javax.swing.JTextField fieldSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblOrder;
    // End of variables declaration//GEN-END:variables

      private void populateTable() {
         DefaultTableModel model = (DefaultTableModel) tblOrder.getModel();
         model.setRowCount(0);
    for(Order o : orderdirectory.getOrderlist()){
    Object[] row = new Object[7];
    row[0] = o.getId();                         
    row[1] = o.getCustomerId();      
    row[2] = o.getTime() != null ? o.getTime().toString() : "";
    row[3] = o.getType();
    row[4] = o.getPaymethod();      
    row[5] = o.getStatus();
    row[6] = o.getProductname();
    model.addRow(row); 
    }
}
@Override
    public void setVisible(boolean visible) {
    super.setVisible(visible);
    if (visible) {
        populateTable(); // 每次显示时刷新
    }}


}
