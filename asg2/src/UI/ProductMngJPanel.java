/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.Product;
import Model.ProductDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class ProductMngJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProductMngJPanel
     */
     private JPanel MainMenu;
    private ProductDirectory productdirectory; 
    public ProductMngJPanel(JPanel mainmenu,ProductDirectory directory) {
        initComponents();
        MainMenu=mainmenu;
        productdirectory=directory;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        AddProduct = new javax.swing.JButton();
        DeleteProduct = new javax.swing.JButton();
        SearchProduct = new javax.swing.JButton();
        fieldSearch = new javax.swing.JTextField();
        ViewProduct = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 24)); // NOI18N
        jLabel1.setText("Product");

        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Name", "ID", "Category", "Price", "Number", "PrepareTime"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProduct);

        AddProduct.setText("Add ");
        AddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddProductActionPerformed(evt);
            }
        });

        DeleteProduct.setText("Delete");
        DeleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteProductActionPerformed(evt);
            }
        });

        SearchProduct.setText("Search");
        SearchProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchProductActionPerformed(evt);
            }
        });

        ViewProduct.setText("View");
        ViewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewProductActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(DeleteProduct, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(AddProduct, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(160, 160, 160)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SearchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ViewProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(318, 318, 318)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddProduct)
                    .addComponent(ViewProduct))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteProduct)
                    .addComponent(SearchProduct)
                    .addComponent(fieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(76, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void AddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddProductActionPerformed
         AddProduct panel=new AddProduct(MainMenu,productdirectory);
        MainMenu.add("AddProduct",panel);
        
        CardLayout layout=(CardLayout)MainMenu.getLayout();
        layout.next(MainMenu);        // TODO add your handling code here:
    }//GEN-LAST:event_AddProductActionPerformed

    private void SearchProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchProductActionPerformed
        if(!fieldSearch.getText().isBlank()){
            String product=fieldSearch.getText();
            Product foundproduct=productdirectory.searchProduct(product);
            
            if(foundproduct !=null){
                ViewProduct panel=new ViewProduct(MainMenu,productdirectory,foundproduct);
                MainMenu.add("ViewProduct",panel);
                CardLayout layout =(CardLayout)MainMenu.getLayout();
                layout.next(MainMenu);      
            }
            else{
                JOptionPane.showMessageDialog(null,"Account not found. Please check the product id and try again");
                
            }
            
        }
         else{
            JOptionPane.showMessageDialog(null,"Please type the product id");
        }
    }//GEN-LAST:event_SearchProductActionPerformed

    private void ViewProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewProductActionPerformed
         int selectedRow=tblProduct.getSelectedRow();
        if(selectedRow>=0){
            
            // 获取选中行的Product ID（第1列）
             String productId = (String)tblProduct.getValueAt(selectedRow, 1);
            // 通过ID查找Product对象
             Product selectedProduct = productdirectory.searchProduct(productId);
           if(selectedProduct != null){
            ViewProduct panel = new ViewProduct(MainMenu, productdirectory, selectedProduct);
            MainMenu.add("ViewProduct", panel);
            CardLayout layout = (CardLayout) MainMenu.getLayout();
            layout.next(MainMenu);
        } else {
            JOptionPane.showMessageDialog(this, "Product not found!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a product from the list", "Warning", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_ViewProductActionPerformed

    private void DeleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteProductActionPerformed
       int selectedRow = tblProduct.getSelectedRow();
        if(selectedRow >= 0){
        int dialogResult = JOptionPane.showConfirmDialog(this, "Are you sure to delete the Product?", 
                                                        "Confirm Delete", JOptionPane.YES_NO_OPTION);
        if(dialogResult == JOptionPane.YES_OPTION){
            String productId = (String)tblProduct.getValueAt(selectedRow, 1);
            Product selectedProduct = productdirectory.searchProduct(productId);
            
            if(selectedProduct != null){
                productdirectory.deleteProduct(selectedProduct);
                populateTable();
                JOptionPane.showMessageDialog(this, "Product deleted successfully!");
            } else {
                JOptionPane.showMessageDialog(this, "Product not found!");
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select an Product to delete!");
    }        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteProductActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddProduct;
    private javax.swing.JButton DeleteProduct;
    private javax.swing.JButton SearchProduct;
    private javax.swing.JButton ViewProduct;
    private javax.swing.JTextField fieldSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProduct;
    // End of variables declaration//GEN-END:variables

        void populateTable() {
         DefaultTableModel model = (DefaultTableModel) tblProduct.getModel();
         model.setRowCount(0);
    for(Product p : productdirectory.getProductlist()){
    Object[] row = new Object[6];
    row[0] = p.getName();
    row[1] = p.getId();
    row[2] = p.getCategory();
    row[3] = p.getPrice();
    row[4] = p.getNumber();      
    row[5] = p.getPreparetime();
    model.addRow(row); 
    }
}
@Override
    public void setVisible(boolean visible) {
    super.setVisible(visible);
    if (visible) {
        populateTable(); // 每次显示时刷新
    }}
}
